{"ast":null,"code":"export const addOrder = data => {\n  return dispatch => {\n    fetch('http://localhost:3000/api/v1/orders', {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'POST',\n      body: JSON.stringify({// order: { \n        //     user_id: {user_id: user.id},\n        //     open: {open: true},\n        //     recipient: {recipient: recipient},\n        //     street_address: {street_address: street_address},\n        //     city: {city: city},\n        //     state: {state: state},\n        //     area_code: {area_code: area_code}\n        // },\n        // user: {username: user}\n      })\n    }).then(response => response.json()).then(order => dispatch({\n      type: 'ADD_ORDER',\n      payload: order\n    }));\n  };\n};\nexport function fetchOrders(action, user_id) {\n  console.log(\"{action, user_id} from fetchOrders\", {\n    action,\n    user_id\n  });\n  return dispatch => {\n    fetch(`http://localhost:300/api/v1/users/${user_id}/orders`).then(response => response.json()).then(orders => dispatch({\n      type: 'FETCH_ORDERS',\n      payload: orders\n    })).catch(error => console.log(\"error\", error));\n  };\n}","map":{"version":3,"sources":["/Users/ianmarshall/Development/phase5/bartr/bartr-frontend/src/actions/order.js"],"names":["addOrder","data","dispatch","fetch","headers","method","body","JSON","stringify","then","response","json","order","type","payload","fetchOrders","action","user_id","console","log","orders","catch","error"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAIC,IAAD,IAAU;AAC9B,SAAQC,QAAD,IAAc;AACjBC,IAAAA,KAAK,CAAC,qCAAD,EAAwC;AACzCC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,kBAAU;AAFL,OADgC;AAKzCC,MAAAA,MAAM,EAAE,MALiC;AAMzCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,CACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAViB,OAAf;AANmC,KAAxC,CAAL,CAmBCC,IAnBD,CAmBMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAnBlB,EAoBCF,IApBD,CAoBMG,KAAK,IAAIV,QAAQ,CAAC;AAACW,MAAAA,IAAI,EAAE,WAAP;AAAoBC,MAAAA,OAAO,EAAEF;AAA7B,KAAD,CApBvB;AAqBH,GAtBD;AAuBH,CAxBM;AA0BP,OAAO,SAASG,WAAT,CAAqBC,MAArB,EAA6BC,OAA7B,EAAqC;AACxCC,EAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ,EAAkD;AAACH,IAAAA,MAAD;AAASC,IAAAA;AAAT,GAAlD;AACA,SAAQf,QAAD,IAAc;AACjBC,IAAAA,KAAK,CAAE,qCAAoCc,OAAQ,SAA9C,CAAL,CACCR,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMW,MAAM,IAAIlB,QAAQ,CAAC;AACrBW,MAAAA,IAAI,EAAE,cADe;AAErBC,MAAAA,OAAO,EAAEM;AAFY,KAAD,CAFxB,EAMCC,KAND,CAMOC,KAAK,IAAEJ,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBG,KAArB,CANd;AAOH,GARD;AASH","sourcesContent":["export const addOrder = (data) => {\n    return (dispatch) => {\n        fetch('http://localhost:3000/api/v1/orders', {\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            }, \n            method: 'POST',\n            body: JSON.stringify({\n                // order: { \n                //     user_id: {user_id: user.id},\n                //     open: {open: true},\n                //     recipient: {recipient: recipient},\n                //     street_address: {street_address: street_address},\n                //     city: {city: city},\n                //     state: {state: state},\n                //     area_code: {area_code: area_code}\n                // },\n                // user: {username: user}\n            })\n        })\n        .then(response => response.json())\n        .then(order => dispatch({type: 'ADD_ORDER', payload: order}))\n    }\n}\n\nexport function fetchOrders(action, user_id){\n    console.log(\"{action, user_id} from fetchOrders\", {action, user_id})\n    return (dispatch) => {\n        fetch(`http://localhost:300/api/v1/users/${user_id}/orders`)\n        .then(response => response.json())\n        .then(orders => dispatch({\n            type: 'FETCH_ORDERS',\n            payload: orders\n        }))\n        .catch(error=>console.log(\"error\", error))\n    }\n}"]},"metadata":{},"sourceType":"module"}