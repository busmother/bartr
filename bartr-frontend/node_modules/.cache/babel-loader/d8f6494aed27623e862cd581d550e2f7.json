{"ast":null,"code":"export const setStatus = () => {\n  return dispatch => {\n    let username = {\n      username: window.localStorage.getItem(\"username\")\n    };\n    console.log(\"user from setStatus\", user);\n\n    if (user.username !== \"undefined\") {\n      dispatch({\n        type: \"setUser\",\n        payload: user.username\n      });\n    }\n  };\n};\nexport const login = username => {\n  console.log(\"user from login method\", username);\n  window.localStorage.setItem(\"username\", username);\n  debugger;\n  return {\n    type: \"setUser\",\n    payload: username\n  };\n};\nexport const logout = () => {\n  window.localStorage.removeItem(\"username\");\n  return {\n    type: \"logout\"\n  };\n};\nexport const addUser = data => {\n  return dispatch => {\n    fetch('http://localhost:3000/api/v1/users', {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'POST',\n      body: JSON.stringify(data)\n    }).then(response => response.json()).then(user => console.log(\"user\", user)).then(user => dispatch({\n      type: 'setUser',\n      payload: user\n    })).catch(error => console.log(\"error\", error));\n  };\n};","map":{"version":3,"sources":["/Users/ianmarshall/Development/phase5/bartr/bartr-frontend/src/actions/user.js"],"names":["setStatus","dispatch","username","window","localStorage","getItem","console","log","user","type","payload","login","setItem","logout","removeItem","addUser","data","fetch","headers","method","body","JSON","stringify","then","response","json","catch","error"],"mappings":"AAAA,OAAO,MAAMA,SAAS,GAAG,MAAM;AAC3B,SAAQC,QAAD,IAAc;AACjB,QAAIC,QAAQ,GAAG;AAAEA,MAAAA,QAAQ,EAAEC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,UAA5B;AAAZ,KAAf;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCC,IAAnC;;AACA,QAAIA,IAAI,CAACN,QAAL,KAAkB,WAAtB,EAAkC;AAC9BD,MAAAA,QAAQ,CAAC;AAACQ,QAAAA,IAAI,EAAE,SAAP;AAAkBC,QAAAA,OAAO,EAAEF,IAAI,CAACN;AAAhC,OAAD,CAAR;AACH;AACJ,GAND;AAOH,CARM;AAUP,OAAO,MAAMS,KAAK,GAAIT,QAAD,IAAc;AAC/BI,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCL,QAAtC;AACAC,EAAAA,MAAM,CAACC,YAAP,CAAoBQ,OAApB,CAA4B,UAA5B,EAAwCV,QAAxC;AACA;AACA,SAAO;AACHO,IAAAA,IAAI,EAAE,SADH;AAEHC,IAAAA,OAAO,EAAER;AAFN,GAAP;AAGH,CAPM;AASP,OAAO,MAAMW,MAAM,GAAG,MAAM;AACxBV,EAAAA,MAAM,CAACC,YAAP,CAAoBU,UAApB,CAA+B,UAA/B;AACA,SAAO;AAACL,IAAAA,IAAI,EAAE;AAAP,GAAP;AACH,CAHM;AAKP,OAAO,MAAMM,OAAO,GAAIC,IAAD,IAAU;AAC7B,SAAQf,QAAD,IAAc;AAEjBgB,IAAAA,KAAK,CAAC,oCAAD,EAAuC;AACxCC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,kBAAU;AAFL,OAD+B;AAKxCC,MAAAA,MAAM,EAAE,MALgC;AAMxCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf;AANkC,KAAvC,CAAL,CAQCO,IARD,CAQMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EARlB,EASCF,IATD,CASMf,IAAI,IAAIF,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBC,IAApB,CATd,EAUCe,IAVD,CAUMf,IAAI,IAAIP,QAAQ,CAAC;AAACQ,MAAAA,IAAI,EAAE,SAAP;AAAkBC,MAAAA,OAAO,EAAEF;AAA3B,KAAD,CAVtB,EAWCkB,KAXD,CAWOC,KAAK,IAAErB,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBoB,KAArB,CAXd;AAYH,GAdD;AAeH,CAhBM","sourcesContent":["export const setStatus = () => {\n    return (dispatch) => {\n        let username = { username: window.localStorage.getItem(\"username\")};\n        console.log(\"user from setStatus\", user)\n        if (user.username !== \"undefined\"){\n            dispatch({type: \"setUser\", payload: user.username})\n        }       \n    } \n}\n\nexport const login = (username) => {\n    console.log(\"user from login method\", username)\n    window.localStorage.setItem(\"username\", username)\n    debugger\n    return {\n        type: \"setUser\", \n        payload: username}\n}\n\nexport const logout = () => {\n    window.localStorage.removeItem(\"username\", )\n    return {type: \"logout\"}\n}\n\nexport const addUser = (data) => {\n    return (dispatch) => {\n\n        fetch('http://localhost:3000/api/v1/users', {\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'POST',\n            body: JSON.stringify(data)\n        })\n        .then(response => response.json())\n        .then(user => console.log(\"user\", user))\n        .then(user => dispatch({type: 'setUser', payload: user}))\n        .catch(error=>console.log(\"error\", error))\n    }\n}"]},"metadata":{},"sourceType":"module"}