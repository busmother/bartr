{"version":3,"sources":["reducers/userReducer.js","reducers/index.js","reducers/productReducer.js","reducers/orderReducer.js","reducers/itemReducer.js","components/Button.js","actions/order.js","actions/item.js","components/Cart.js","components/Login.js","actions/user.js","components/PopUp.js","components/Counter.js","components/Product.js","components/Products.js","components/ProductsContainer.js","actions/fetchProducts.js","components/Order.js","components/Orders.js","components/OrdersContainer.js","components/Checkout.js","components/FormErrors.js","components/CheckoutValidated.js","App.js","index.js"],"names":["combineReducers","productReducer","state","products","action","type","payload","orderReducer","orders","console","log","itemReducer","items","data","removalIndex","findIndex","item","id","slice","user","username","loggedIn","buttonStyle","margin","Button","className","style","onClick","this","props","handleClick","label","Component","fetchOrders","user_id","dispatch","fetch","then","response","json","catch","error","closeOrder","order_id","headers","method","body","JSON","stringify","recipient","street_address","streetAddress","city","zip_code","zipCode","fetchItems","clearItems","Cart","removeClick","e","item_id","preventDefault","removeItem","open_order_id","total","map","parseInt","attributes","product","price","reduce","a","b","CSSTransition","transitionName","Grid","name","cartTotal","connect","last_order_index","length","order_total","LoginComponent","useDispatch","useState","setName","onSubmit","addUser","for","onChange","target","value","PopUp","Counter","Product","useSelector","src","image","alt","description","addItem","defaultProps","availability","Products","container","direction","justify","spacing","xs","ProductsContainer","fetchProducts","addToCart","React","Order","order","format","updated_at","Orders","OrdersContainer","filter","open","clearOrders","Checkout","handleChange","setState","handleSubmit","areaCode","placeholder","FormErrors","formErrors","Object","keys","fieldName","i","initialState","recipientValid","streetAddressValid","cityValid","stateValid","zipCodeValid","CheckoutValidated","validateField","fieldValidationErrors","validateForm","formValid","allFieldsValidated","errorClass","handleUserInput","disabled","App","toggleLoginPop","loginSequence","logoutSequence","clearProducts","logout","greeting","bind","to","path","component","current_order_id","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.80827bfa.chunk.js","sourcesContent":["export default (state = {user: {username: ''}, loggedIn: false }, action) => {\n    switch (action.type) {\n        case \"SET_USER\":\n            return {user: action.payload, loggedIn: true};\n        case \"NO_USER\":\n            return { user: {username: ''}, loggedIn: false};\n        case \"LOGOUT\":\n            return {user: {username: ''}, loggedIn: false};\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux'\nimport productReducer from './productReducer'\nimport orderReducer from './orderReducer'\nimport itemReducer from './itemReducer'\nimport user from './userReducer'\n\nexport default combineReducers({\n    productReducer,\n    orderReducer,\n    itemReducer,\n    user,\n})","export default function productReducer(state = {products: []}, action) {\n\n    switch (action.type) {\n        case 'FETCH_PRODUCTS':\n            return {products: action.payload}\n        case 'CLEAR_PRODUCTS':\n            return {products: []}\n        default:\n            return state\n    }\n}","export default function orderReducer(state = {orders: []}, action) {\nconsole.log(\"payload for orderReducer\", action.payload)\n    switch (action.type) {\n        case 'FETCH_ORDERS':\n            return {orders: action.payload}\n        case 'CLEAR_ORDERS': \n            return {orders: []}\n        default:\n            return state\n    }\n}","export default function itemReducer(state = {items: []}, action) {\n    \n    switch (action.type) {\n        case 'FETCH_ITEMS':\n            return {items: action.payload}\n        case 'ADD_ITEM':\n            return {items: [...state.items, action.payload.data]}\n        case 'REMOVE_ITEM':\n            const removalIndex = state.items.findIndex(item => item.id === action.payload);\n            return (\n                {...state, \n                    items: [\n                        ...state.items.slice(0, removalIndex),\n                    ...state.items.slice(removalIndex + 1)\n                    ]\n                }\n            )\n        case 'CLEAR_ITEMS':\n            return {items: []}\n        default:\n            return state\n    }\n}\n\n","import React, { Component } from 'react'\nimport './button-stylesheet.css'\n\nconst buttonStyle = {\n    margin: '10px 10px 10px 0'\n};\n\nclass Button extends Component {\n\n    render() {\n        return (\n            <button\n                className=\"button\"\n                style = {buttonStyle}\n                onClick={this.props.handleClick}>{this.props.label}\n            </button>\n        )\n    }\n}\n\nexport default Button","export function fetchOrders(user_id){\n    return (dispatch) => {\n        fetch(`http://localhost:3000/api/v1/users/${user_id}/orders`)\n        .then(response => response.json())\n        .then(orders => dispatch({\n            type: 'FETCH_ORDERS',\n            payload: orders.data\n        }))\n        .catch(error=>console.log(\"error\", error))\n    }\n}\n\nexport const closeOrder = (data, user_id, order_id) => {\n    return (dispatch) => {\n        fetch(`http://localhost:3000/api/v1/users/${user_id}/orders/${order_id}`, {\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            }, \n            method: 'PATCH',\n            body: JSON.stringify({\n                    order_id: order_id,\n                    recipient: data.recipient,\n                    street_address: data.streetAddress,\n                    city: data.city,\n                    state: data.state,\n                    zip_code: data.zipCode\n            })\n        })\n        .then(response => response.json())\n        .catch(error=>console.log(\"error\", error))\n    }\n}\n\nexport const clearOrders = () => {\n    return (dispatch) => {\n        dispatch({type: \"CLEAR_ORDERS\"})\n    }\n}","export function fetchItems(user_id, order_id){\n    return (dispatch) => {\n        fetch(`http://localhost:3000/api/v1/users/${user_id}/orders/${order_id}/items`)\n        .then(response => response.json())\n        .then(items => dispatch({\n            type: 'FETCH_ITEMS',\n            payload: items.data\n        }))\n        .catch(error=>console.log(\"error\", error))\n    }\n}\n\nexport const addItem = (data, user_id, order_id) => { \n    console.log()\n    return (dispatch) => {\n        fetch(`http://localhost:3000/api/v1/users/${user_id}/orders/${order_id}/items`, {\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            }, \n            method: 'POST',\n            body: JSON.stringify(data)\n        })\n        .then(response => response.json())\n        .then(item => dispatch({\n            type: 'ADD_ITEM', \n            payload: item}))\n        .catch(error=>console.log(\"error\", error))\n    }\n}\n\nexport const removeItem = (user_id, order_id, item_id) => {\n    return (dispatch) => {\n        fetch(`http://localhost:3000/api/v1/users/${user_id}/orders/${order_id}/items/${item_id}`, {\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            }, \n            method: 'DELETE',\n        })\n        .then(dispatch({type: 'REMOVE_ITEM', payload: item_id}))\n        .catch(error=>console.log(\"error\", error))\n    }\n}\n\nexport const clearItems = () => {\n    return (dispatch) => {\n        dispatch({type: 'CLEAR_ITEMS'})\n    }\n}\n\n\n\n","import React, { Component } from 'react'\nimport { Grid } from '@material-ui/core'\nimport { CSSTransition } from 'react-transition-group'\n\nimport './cart-stylesheet.css'\nimport Button from './Button.js'\nimport { connect } from 'react-redux'\nimport { fetchOrders } from '../actions/order'\nimport { fetchItems, removeItem } from '../actions/item'\n\nclass Cart extends Component {\n\n    componentDidMount() {\n        let user_id = this.props.user_id\n        this.props.fetchOrders(user_id)\n        let open_order_id = this.props.open_order_id\n        this.props.fetchItems(user_id, open_order_id)\n    }\n\n    removeClick = (e, item_id) => {\n        e.preventDefault();\n        this.props.removeItem(this.props.user_id, this.props.open_order_id, item_id)\n    }\n\n    cartTotal() {\n        let cartItems \n        if (this?.props?.items){\n            cartItems = this?.props?.items\n            let total = cartItems.map(item => parseInt(item.attributes.product.price)).reduce((a, b) => a+b, 0)\n            return `Total: $ ${total}`\n        }else{\n            return \" Loading...\"\n        }\n    }\n    \n    render(){ \n        return(\n            <div>\n                <em><p className=\"cart-header\"> Your cart:</p></em>\n                <CSSTransition transitionName=\"animation\">\n                <ul>\n                {this?.props?.items?.map((item) => (\n                    <Grid\n                    item\n                    key={item.id}\n                    >\n                        <li id={item.id}>{item?.attributes?.product?.name} - ${item?.attributes?.product?.price} \n                        <Button key={item.id} handleClick={(e) => this.removeClick(e, item.id)} item_id={item.id} label=\"Remove\"/> </li>\n                    </Grid>\n                ))}\n                </ul>\n                </CSSTransition>\n                <em>{this.cartTotal()}</em><br></br>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    const last_order_index = state?.orderReducer?.orders?.length - 1\n    return {\n        user_id: state?.user?.user?.data?.attributes?.id,\n        open_order_id: state?.user?.user?.data?.attributes?.open_order_id,\n        order_total: state?.orderReducer?.orders?.[last_order_index]?.attributes.order_total,\n        items: state?.itemReducer?.items \n    }\n}\n\nexport default connect(mapStateToProps, { fetchOrders, fetchItems, removeItem })(Cart)\n\n","import { useDispatch } from 'react-redux'\nimport { addUser } from '.././actions/user'\nimport React, { useState } from 'react'\n\nexport default function LoginComponent(props) {\n\n    const dispatch = useDispatch();\n    const [name, setName] = useState('');\n\n    const handleChange = (e) => {\n        setName(e.target.value)\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        if (name.length){\n        dispatch(addUser(name))\n        }\n        \n    };\n\n    return(\n        <div>\n            <h3>Please enter a name to continue:</h3>\n            <form onSubmit = {handleSubmit}>\n                <label for = \"username\">Username:</label>\n                <input\n                    onChange = {handleChange}\n                    id = \"username\"\n                    name = \"username\"\n                    value = {name}\n                />\n                <input type = \"submit\" value = \"Sign in\" />\n            </form>\n        </div>\n    );\n}","export const setStatus = () => {\n    let username = window.localStorage.getItem(\"username\");\n    return (dispatch) => {\n        if (username === \"undefined\"){\n            dispatch({type: \"NO_USER\",}) // added this 6/10, doesn't do anything?\n        }\n        if (username !== \"undefined\"){\n            dispatch({type: \"SET_USER\", payload: username})\n        }       \n    } \n}\n\nexport const logout = () => {\n    return (dispatch) => {\n        dispatch({type: \"LOGOUT\"})\n    }\n}\n\nexport const addUser = (name) => {\n    return (dispatch) => {\n        fetch('http://localhost:3000/api/v1/users', {\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'POST',\n            body: JSON.stringify({user: {username: name}})\n        })\n        .then(response => response.json())\n        .then(user => dispatch({type: 'SET_USER', payload: user}))\n        .catch(error=>console.log(\"error\", error))\n    }\n}","import React, { Component } from 'react'\nimport './popup-stylesheet.css'\nimport LoginComponent from './Login'\n\nexport default class PopUp extends Component {\n\n    render() {\n        return (\n                <div className=\"popup\">\n                <div className=\"modal_content\">\n                    <LoginComponent />\n                </div>\n            </div> \n        )\n    }\n\n}\n","import React, { useState } from \"react\";\nimport Button from './Button'\n\nfunction Counter() {\n  const [count, setCount] = useState(0);\n\n  const handleClick = () => {\n    setCount(prevCount => prevCount + 1);\n  };\n\n\n  return (\n    <div>\n          <Button handleClick={handleClick} label = \"Like\" />\n        <h5>Likes: {count}</h5>\n    </div>\n  );\n}\n\nexport default Counter;","import React from \"react\";\nimport Button from './Button'\nimport './product-stylesheet.css'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { addItem } from '.././actions/item'\nimport Counter from './Counter'\n\n\nconst Product = ({ product }) => {\n    const dispatch = useDispatch()\n    const user_id = useSelector(state => state?.user?.user?.data?.id)\n    const open_order_id = useSelector(state => state?.user?.user?.data?.attributes?.open_order_id)\n\n\n    return(\n        <div className=\"product-card\" >\n        <img className=\"product-image\" src={product.attributes.image} alt={\"product\"}></img> \n        <h3>{product.attributes.name}</h3>\n        <em><p className=\"description\"> {product.attributes.description}</p></em>\n        <p>${product.attributes.price}</p>\n        <Button handleClick={() => dispatch(addItem(product, user_id, open_order_id))} label=\"Add to cart\"> </Button>\n    </div>\n    )\n}\n\nProduct.defaultProps = {\n    name: \"name\",\n    description: \"missing description, whoops!\",\n    image: \"https://static.thenounproject.com/png/82078-200.png\",\n    price: \"Everything for a price\",\n    availability: \"false\"\n}\n\nexport default Product","import React from 'react';\nimport {Grid} from '@material-ui/core';\nimport Product from './Product';\nimport './products-stylesheet.css'\n\nconst Products = (props) => {\n\n    return(\n        <main className=\"container\">\n            <Grid \n            container \n            direction=\"row\"\n            justify=\"center\" \n            spacing = {2}>\n            {props.products &&\n            props.products.map((product) => (\n\n                <Grid\n                item\n                key={product.id}\n                xs={4}>\n\n                    <Product product={product} className=\"product\"/>\n\n                </Grid>\n\n            ))}\n            \n            </Grid>\n        </main>\n    )\n}\n\nexport default Products","import React from 'react'\nimport { connect } from 'react-redux'\nimport {fetchProducts} from '../actions/fetchProducts'\nimport Products from './Products'\n\nclass ProductsContainer extends React.Component {\n\n    componentDidMount() {\n        this.props.fetchProducts()\n    };\n\n    render() {\n        return(\n            <div>\n                <Products products={this.props.products} addToCart={this.props.addToCart}/>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        products: state.productReducer.products\n    }\n}\n\nexport default connect(mapStateToProps, { fetchProducts })(ProductsContainer)","export function fetchProducts(action){\n    return (dispatch) => {\n        fetch('http://localhost:3000/api/v1/products')\n        .then(response => response.json())\n        .then(products => dispatch({\n            type: 'FETCH_PRODUCTS',\n            payload: products.data\n        }))\n        .catch(error=>console.log(\"error\", error))\n    }\n}\n\n","import React from 'react';\nimport Moment from 'react-moment'\n\n\nconst Order = ({ order }) => {\n    return (\n        \n        <div>\n            <h4>Order #{order.id} – <em><Moment format='MMMM Do YYYY, h:mm:ss a'>{order.attributes.updated_at}</Moment></em> </h4> \n            <h5>Summary: </h5>\n            <h5>Delivery address:<br></br>\n            {order.attributes.recipient}<br></br>\n            {order.attributes.street_address}<br></br>\n            {order.attributes.city}, {order.attributes.state} {order.attributes.zip_code}</h5>\n            <ul>\n                {order.attributes.products.map((product) => (\n                    <li className=\"product-list\">{product.name} - ${product.price}</li>\n                ))}\n            </ul>\n            <h5>Order total: ${order.attributes.order_total}</h5>\n        </div>\n    )\n\n}\n\nOrder.defaultProps = {\n    id: \"Order ID number missing\",\n    items: \"Order Items missing\"\n}\n\nexport default Order","import React from 'react';\nimport Order from './Order'\n\nconst Orders = (props) => {\n\n    return(\n        <div>\n            <ul>\n                {props.orders &&\n                    props.orders.map((order) => (\n                        <li><Order key={order.id} order={order} order_id={order.id} className = \"order\" /></li>\n                    ))}\n            </ul>\n        </div>\n    )\n}\n\nexport default Orders\n\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { fetchOrders, clearOrders } from '../actions/order'\nimport { fetchItems } from '../actions/item'\nimport Orders from './Orders'\nimport './orders-container-stylesheet.css'\n\nclass OrdersContainer extends React.Component {\n\n    componentDidMount() {\n        let user_id = this.props.user_id\n        this.props.fetchOrders(user_id)\n        let open_order_id = this.props.open_order_id\n        this.props.fetchItems(user_id, open_order_id)\n    }\n\n    render() {\n        return(\n            <div className=\"container\">\n                <Orders orders={this?.props?.orders?.filter(order => {\n                    return order?.attributes?.open === false\n                })} />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        orders: state?.orderReducer?.orders,\n        user_id: state?.user?.user?.data?.id\n    }\n}\n\nexport default connect(mapStateToProps, {fetchOrders, fetchItems, clearOrders})(OrdersContainer)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { closeOrder } from '../actions/order'\nimport { clearItems } from '../actions/item'\n\nclass Checkout extends Component {\n\n    state = {\n        recipient: '',\n        streetAddress: '',\n        city: '',\n        state: '',\n        zipCode:''\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        this.props.closeOrder(this.state, this.props.user_id, this.props.order_id)\n        this.setState({\n            recipient: '',\n            streetAddress: '',\n            city: '',\n            state: '',\n            areaCode: ''\n        })\n        this.props.clearItems()\n    }\n\n    render(props){\n        return(\n            <div>\n                <br></br><br></br>\n                Confirm shipping information for your current order:\n                <br></br><br></br><br></br><br></br>\n                <form onSubmit={this.handleSubmit}>\n                    <label>Recipient:</label>\n                    <input type='text' placeholder='Recipient' value = {this.state.recipient} name='recipient' onChange={this.handleChange}/><br></br><br></br>\n                    <label>Street Address:</label>\n                    <input type='text' placeholder='Street Address' value = {this.state.streetAddress} name='streetAddress' onChange={this.handleChange}/><br></br><br></br>\n                    <label>City:</label>\n                    <input type='text' placeholder='City' value = {this.state.city} name='city' onChange={this.handleChange}/>\n                    <label>State:</label>\n                    <input type='text' placeholder='State' value = {this.state.state} name='state' onChange={this.handleChange}/>\n                    <label>Zip Code:</label>\n                    <input type='text' placeholder='Zip Code' value = {this.state.zipCode} name='zipCode' onChange={this.handleChange}/><br></br><br></br><br></br>\n                    <input type='submit'></input>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    const last_order_index = state?.orderReducer?.orders?.length - 1\n    return{\n        order_total: state?.orderReducer?.orders?.[last_order_index]?.attributes?.order_total,\n        user_id: state?.user?.user?.data?.id,\n        order_id: state?.orderReducer?.orders?.[last_order_index]?.id\n    }\n}\n\n\nexport default connect(mapStateToProps, { closeOrder, clearItems })(Checkout)\n","import React from 'react';\n\nexport const FormErrors = ({formErrors}) =>\n  <div className='formErrors'>\n    {Object.keys(formErrors).map((fieldName, i) => {\n      if(formErrors[fieldName].length > 0){\n        return (\n          <p key={i}>{fieldName} {formErrors[fieldName]}</p>\n        )        \n      } else {\n        return '';\n      }\n    })}\n  </div>","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { closeOrder } from '../actions/order'\nimport { clearItems } from '../actions/item'\nimport { FormErrors } from './FormErrors'\n\nconst initialState = {\n    recipient: '',\n    recipientValid: false,\n    streetAddress: '',\n    streetAddressValid: false,\n    city: '',\n    cityValid: false,\n    state: '',\n    stateValid: false,\n    zipCode: '',\n    zipCodeValid: false,\n    formErrors: {recipient: '', streetAddress: '', city: '', state: '', zipCode: ''}\n};\n\nclass CheckoutValidated extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = initialState\n    }\n\n    handleUserInput (e) {\n        const name = e.target.name;\n        const value = e.target.value;\n        this.setState({[name]: value},\n            () => { this.validateField(name, value) });\n    }\n\n    validateField(fieldName, value) {\n        let fieldValidationErrors = this.state.formErrors;\n        let recipientValid = this.state.recipientValid;\n        let streetAddressValid = this.state.streetAddressValid;\n        let cityValid = this.state.cityValid;\n        let stateValid = this.state.stateValid;\n        let zipCodeValid = this.state.zipCodeValid\n\n        switch(fieldName) {\n            case 'recipient':\n                recipientValid = value.length >= 2;\n                fieldValidationErrors.recipient = recipientValid ? '' : ' Please add a recipient ';\n                break;\n            case 'streetAddress':\n                streetAddressValid = value.length >= 2;\n                fieldValidationErrors.streetAddress = streetAddressValid ? '' : ' Please add a Street Address ';\n                break;\n            case 'city':\n                cityValid = value.length >= 2;\n                fieldValidationErrors.city = cityValid ? '' : ' Please add a city ';\n                break;\n            case 'state':\n                stateValid = value.length === 2;\n                fieldValidationErrors.state = stateValid ? '' : ' Please add a state ';\n                break;\n            case 'zipCode':\n                zipCodeValid = value.length === 5;\n                fieldValidationErrors.zipCode = zipCodeValid ? '' : ' Please add a zip code ';\n                break;\n            default:\n                break;\n        }\n\n        this.setState({formErrors: fieldValidationErrors,\n                    recipientValid: recipientValid,\n                    streetAddressValid: streetAddressValid,\n                    cityValid: cityValid,\n                    stateValid: stateValid,\n                    zipCodeValid: zipCodeValid\n                }, this.validateForm);\n    }\n\n    validateForm() {\n        this.setState({formValid: this.state.recipientValid && this.state.streetAddressValid && this.state.cityValid && this.state.stateValid && this.state.zipCodeValid})\n    }\n\n    errorClass(error) {\n        return(error.length === 0 ? '' : 'has-error')\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.closeOrder(this.state, this.props.user_id, this.props.order_id)\n        this.setState(initialState);\n        this.props.clearItems()\n    }\n\n    render(){\n        const { recipient, streetAddress, city, state, zipCode, allFieldsValidated } = this.state;\n        return(\n            <div>\n                <br></br><br></br>\n                Confirm shipping information for your current order:\n                <br></br><br></br><br></br><br></br>\n                <form onSubmit={e => this.handleSubmit(e)}>\n                <div className = {`form-group ${this.errorClass(this.state.formErrors.recipient)}`}>\n                    <label>Recipient:</label>\n                    <input \n                        type='text' \n                        name='recipient' \n                        value = {recipient.value}  \n                        placeholder='Recipient' \n                        className=\"form-control\"\n                        onChange={e => \n                            this.handleUserInput(e)\n                        }\n                    />\n                </div>\n                <br></br>\n                    <div className = {`form-group ${this.errorClass(this.state.formErrors.streetAddress)}`}>\n                    <label>Street address:</label>\n                    <input \n                        type='text' \n                        name='streetAddress' \n                        value = {streetAddress.value}  \n                        placeholder='Street Address' \n                        className=\"form-control\"\n                        onChange={e => \n                            this.handleUserInput(e)\n                        }\n                    />\n                </div>\n                <br></br>\n                <div className = {`form-group ${this.errorClass(this.state.formErrors.city)}`}>\n                    <label>City:</label>\n                    <input \n                        type='text' \n                        name='city' \n                        value = {city.value}  \n                        placeholder='City' \n                        className=\"form-control\"\n                        onChange={e => \n                            this.handleUserInput(e)\n                        }\n                    />\n                </div>\n                <br></br>\n                <div className = {`form-group ${this.errorClass(this.state.formErrors.state)}`}>\n                    <label>State:</label>\n                    <input \n                        type='text' \n                        name='state' \n                        value = {state.value}  \n                        placeholder='state' \n                        className=\"form-control\"\n                        onChange={e => \n                            this.handleUserInput(e)\n                        }\n                    />\n                </div>\n                <br></br>\n                <div className = {`form-group ${this.errorClass(this.state.formErrors.zipCode)}`}>\n                    <label>Zip Code:</label>\n                    <input \n                        type='text' \n                        name='zipCode' \n                        value = {zipCode.value}  \n                        placeholder='Zip Code' \n                        className=\"form-control\"\n                        onChange={e => \n                            this.handleUserInput(e)\n                        }\n                    />\n                </div>\n                <br></br>\n                <div className = \"panel panel-default\">\n                    <em><FormErrors formErrors={this.state.formErrors} /></em>\n                </div>\n                    <button\n                        type=\"submit\"\n                        className=\"button\"\n                        disabled={!this.state.formValid}\n                    >\n                        Submit Order\n                    </button>\n                </form>\n            </div>\n        )\n    }\n\n}\n\nconst mapStateToProps = state => {\n    const last_order_index = state?.orderReducer?.orders?.length - 1\n    return{\n        order_total: state?.orderReducer?.orders?.[last_order_index]?.attributes?.order_total,\n        user_id: state?.user?.user?.data?.id,\n        order_id: state?.orderReducer?.orders?.[last_order_index]?.id\n    }\n}\n\nexport default connect(mapStateToProps, { closeOrder, clearItems })(CheckoutValidated)","import React, { Component } from 'react'\nimport {Route, BrowserRouter as Router, Switch, Link } from 'react-router-dom'\n\n\nimport Cart from './components/Cart.js'\nimport './app-stylesheet.css'\nimport PopUp from './components/PopUp'\n\nimport ProductsContainer from './components/ProductsContainer'\nimport { connect } from 'react-redux'\nimport { fetchOrders, clearOrders } from './actions/order'\nimport { fetchItems } from './actions/item'\nimport Button from './components/Button'\nimport LoginComponent from './components/Login'\nimport OrdersContainer from './components/OrdersContainer'\nimport Checkout from './components/Checkout'\nimport CheckoutValidated from './components/CheckoutValidated'\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loggedIn: false\n        };\n        this.toggleLoginPop = this.toggleLoginPop.bind(this);\n    }\n\n    toggleLoginPop = () => {\n        this.setState(state => ({\n            loggedIn: !state.loggedIn\n        }));\n    }\n\n    loginSequence = () => {\n        console.log(\"this.props from loginSequence\", this.props)\n        console.log(\"loginSequence firing\")\n        let user_id = this.props.user_id\n        let open_order_id = this.props.open_order_id\n        console.log(\"user_id and open_order_id\", user_id, open_order_id)\n        this.props.fetchOrders(user_id)\n        this.props.fetchItems(user_id, open_order_id)\n    }\n\n    logoutSequence = () => {\n        this.toggleLoginPop()\n        this.props.clearOrders();\n        this.props.clearItems();\n        this.props.clearProducts();\n        this.props.logout();\n    }\n\n    greeting = () => { \n        if (this?.props?.loggedIn === true){ \n                return (<h4>Hi {this?.props?.user?.user?.data?.attributes?.username}</h4>)\n            }\n        }\n\n    componentWillUpdate() {\n        this.loginSequence()\n    } \n\n    render(){\n        return(\n            <Router>\n            <div className=\"wrap\">\n                {this.props.loggedIn ?  null : <PopUp loggedIn = {this.props.loggedIn}/>}  \n                <div className=\"header\">\n                    <h1>Bartr</h1>\n                    {this.greeting()}\n                </div>\n                <nav className=\"nav\">\n                <br></br>\n                <ul className=\"nav-list\">\n                    <li className=\"nav-link\"><Link to=\"/products\">Products </Link></li>\n                    <li className=\"nav-link\"><Link to=\"/past-orders\">Past Orders</Link></li>\n                    <li className=\"nav-link\"><Link to=\"/checkout\">Checkout</Link></li>\n                    <li className=\"nav-link\"><Button handleClick={() => {\n                                                        this.logoutSequence(); \n                                                        }} \n                                                        label = \"Logout\" /></li>\n                </ul>\n                <br></br>\n                </nav>\n                <div className=\"main\">\n                <Switch>\n                    <Route path = '/products' component = {ProductsContainer}/> \n                    <Route path = '/cart' component = {Cart}/>\n                    <Route path = '/checkout' component = {CheckoutValidated}/>\n                    <Route path = '/past-orders' component = {OrdersContainer}/>\n                </Switch>\n            </div>\n                <aside className=\"sidebar\">\n                <Cart/>\n                </aside>\n                <footer className=\"footer\">\n                    <p></p>\n                </footer>\n            </div>\n            </Router>\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchOrders: () => dispatch({type: 'FETCH_ORDERS'}),\n        fetchItems: () => dispatch({type: 'FETCH_ITEMS'}),\n        clearOrders: () => dispatch({type: 'CLEAR_ORDERS'}),\n        clearItems: () => dispatch({type: 'CLEAR_ITEMS'}),\n        clearProducts: () => dispatch({type: 'CLEAR_PRODUCTS'}),\n        logout: () => dispatch({type: 'LOGOUT'})\n    }\n }\n\nconst mapStateToProps = state => {\n    return {\n        loggedIn: state?.user?.loggedIn,\n        user: state.user,\n        user_id: state?.user?.user?.data?.id,\n        current_order_id: state?.user?.user?.data?.current_order_id\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux'\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport combineReducers from './reducers/index'\n\nimport App from './App';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; \n\nlet store = createStore(combineReducers, composeEnhancers(applyMiddleware(thunk)))\n\nReactDOM.render(\n\n    <Provider store={store}>\n        <App />\n    </Provider>\n, \ndocument.getElementById('root'));"],"sourceRoot":""}